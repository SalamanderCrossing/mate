{"ast":null,"code":"var _jsxFileName = \"/home/bluesk/Documents/mate/pages/src/TagInput.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n//\n// interface Tag {\n//   name: string;\n// }\n//\n// const TagInput = ({onChange}:{\n//     onChange:(tags:Tag[])=>void\n//   }) => {\n//   const [tags, setTags] = useState<Tag[]>([]);\n//   const [inputValue, setInputValue] = useState('');\n//\n//   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setInputValue(event.target.value);\n//   }\n//\n//   const handleAddTag = () => {\n//     if (inputValue.trim() !== '') {\n//       const newTags = [...tags, { name: inputValue }]\n//       setTags(newTags);\n//       onChange(newTags);\n//       setInputValue('');\n//     }\n//   }\n//\n//   const handleRemoveTag = (index: number) => {\n//     const newTags = tags.filter((_, i) => i !== index)\n//     setTags(newTags);\n//     onChange(newTags)\n//   }\n//\n//   return (\n//     <div style={{maxWidth:'40%'}} className=\"input-group input-group-lg\">\n//       <div className=\"input-group input-group-lg\">\n//         <input type=\"text\" value={inputValue} onChange={handleChange} className=\"form-control\" />\n//         <div className=\"input-group-append\">\n//           <button className=\"btn btn-secondary btn-lg\" onClick={handleAddTag}>Add Tag</button>\n//         </div>\n//       </div>\n//       <div className=\"d-flex flex-wrap\">\n//         {tags.map((tag, index) => (\n//           <span className=\"badge badge-secondary mr-2 mb-2\" key={index}>\n//             {tag.name}\n//             <button className=\"btn btn-link\" onClick={() => handleRemoveTag(index)}>\n//               x\n//             </button>\n//           </span>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n//\n// export default TagInput;\n//\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TagInput = _ref => {\n  _s();\n  let {\n    tags,\n    onChange\n  } = _ref;\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleAddTag = () => {\n    if (inputValue.trim() !== \"\") {\n      setInputValue(\"\");\n      onChange([...tags, {\n        name: inputValue\n      }]);\n    }\n  };\n  const handleRemoveTag = index => {\n    onChange(tags.filter((tag, i) => i !== index));\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      handleAddTag();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group input-group-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-prepend\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-lg btn-secondary\",\n          style: {\n            borderRadius: \"0 0 0 0\"\n          },\n          onClick: handleAddTag,\n          children: \"Dependency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        className: \"form-control\",\n        style: {\n          borderRadius: \"0 30px 30px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap\",\n      children: tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-pill badge-primary\",\n          style: {\n            border: \"1px solid\",\n            margin: \"1px\"\n          },\n          children: [tag.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm p-0\",\n            style: {\n              marginLeft: \"3px\",\n              marginTop: \"0\",\n              marginBottom: \"3px\"\n            },\n            onClick: () => handleRemoveTag(index),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(TagInput, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n_c = TagInput;\nexport default TagInput;\nvar _c;\n$RefreshReg$(_c, \"TagInput\");","map":{"version":3,"names":["React","useState","TagInput","tags","onChange","inputValue","setInputValue","handleChange","event","target","value","handleAddTag","trim","name","handleRemoveTag","index","filter","tag","i","handleKeyDown","key","preventDefault","borderRadius","map","border","margin","marginLeft","marginTop","marginBottom"],"sources":["/home/bluesk/Documents/mate/pages/src/TagInput.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n//\n// interface Tag {\n//   name: string;\n// }\n//\n// const TagInput = ({onChange}:{\n//     onChange:(tags:Tag[])=>void\n//   }) => {\n//   const [tags, setTags] = useState<Tag[]>([]);\n//   const [inputValue, setInputValue] = useState('');\n//\n//   const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     setInputValue(event.target.value);\n//   }\n//\n//   const handleAddTag = () => {\n//     if (inputValue.trim() !== '') {\n//       const newTags = [...tags, { name: inputValue }]\n//       setTags(newTags);\n//       onChange(newTags);\n//       setInputValue('');\n//     }\n//   }\n//\n//   const handleRemoveTag = (index: number) => {\n//     const newTags = tags.filter((_, i) => i !== index)\n//     setTags(newTags);\n//     onChange(newTags)\n//   }\n//\n//   return (\n//     <div style={{maxWidth:'40%'}} className=\"input-group input-group-lg\">\n//       <div className=\"input-group input-group-lg\">\n//         <input type=\"text\" value={inputValue} onChange={handleChange} className=\"form-control\" />\n//         <div className=\"input-group-append\">\n//           <button className=\"btn btn-secondary btn-lg\" onClick={handleAddTag}>Add Tag</button>\n//         </div>\n//       </div>\n//       <div className=\"d-flex flex-wrap\">\n//         {tags.map((tag, index) => (\n//           <span className=\"badge badge-secondary mr-2 mb-2\" key={index}>\n//             {tag.name}\n//             <button className=\"btn btn-link\" onClick={() => handleRemoveTag(index)}>\n//               x\n//             </button>\n//           </span>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n//\n// export default TagInput;\n//\n\nimport React, { useState } from \"react\";\n\ninterface Tag {\n  name: string;\n}\n\nconst TagInput: React.FC<{\n  tags: Tag[];\n  onChange: (newTags: Tag[]) => void;\n}> = ({ tags, onChange }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleAddTag = () => {\n    if (inputValue.trim() !== \"\") {\n      setInputValue(\"\");\n      onChange([...tags, { name: inputValue }]);\n    }\n  };\n\n  const handleRemoveTag = (index: number) => {\n    onChange(tags.filter((tag, i) => i !== index));\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      handleAddTag();\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"input-group input-group-lg\">\n        <div className=\"input-group-prepend\">\n          <button\n            className=\"btn btn-lg btn-secondary\"\n            style={{ borderRadius: \"0 0 0 0\" }}\n            onClick={handleAddTag}\n          >\n            Dependency\n          </button>\n        </div>\n\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          className=\"form-control\"\n          style={{ borderRadius: \"0 30px 30px 0\" }}\n        />\n      </div>\n      <div className=\"d-flex flex-wrap\">\n        {tags.map((tag, index) => (\n          <span>\n            <span\n              className=\"badge badge-pill badge-primary\"\n              style={{ border: \"1px solid\", margin: \"1px\" }}\n              key={index}\n            >\n              {tag.name}\n              <button\n                className=\"btn btn-sm p-0\"\n                style={{\n                  marginLeft: \"3px\",\n                  marginTop: \"0\",\n                  marginBottom: \"3px\",\n                }}\n                onClick={() => handleRemoveTag(index)}\n              >\n                x\n              </button>\n            </span>\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TagInput;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAMxC,MAAMC,QAGJ,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC,IAAI;IAAEC;EAAS,CAAC;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMM,YAAY,GAAIC,KAA0C,IAAK;IACnEF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACzB,IAAIN,UAAU,CAACO,IAAI,EAAE,KAAK,EAAE,EAAE;MAC5BN,aAAa,CAAC,EAAE,CAAC;MACjBF,QAAQ,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAEU,IAAI,EAAER;MAAW,CAAC,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,MAAMS,eAAe,GAAIC,KAAa,IAAK;IACzCX,QAAQ,CAACD,IAAI,CAACa,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC;EAChD,CAAC;EAED,MAAMI,aAAa,GAAIX,KAA0B,IAAK;IACpD,IAAIA,KAAK,CAACY,GAAG,KAAK,OAAO,EAAE;MACzBZ,KAAK,CAACa,cAAc,EAAE;MACtBV,YAAY,EAAE;IAChB;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,4BAA4B;MAAA,wBACzC;QAAK,SAAS,EAAC,qBAAqB;QAAA,uBAClC;UACE,SAAS,EAAC,0BAA0B;UACpC,KAAK,EAAE;YAAEW,YAAY,EAAE;UAAU,CAAE;UACnC,OAAO,EAAEX,YAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAGf;QAAA;QAAA;QAAA;MAAA,QACL,eAEN;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEN,UAAW;QAClB,QAAQ,EAAEE,YAAa;QACvB,SAAS,EAAEY,aAAc;QACzB,SAAS,EAAC,cAAc;QACxB,KAAK,EAAE;UAAEG,YAAY,EAAE;QAAgB;MAAE;QAAA;QAAA;QAAA;MAAA,QACzC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,kBAAkB;MAAA,UAC9BnB,IAAI,CAACoB,GAAG,CAAC,CAACN,GAAG,EAAEF,KAAK,kBACnB;QAAA,uBACE;UACE,SAAS,EAAC,gCAAgC;UAC1C,KAAK,EAAE;YAAES,MAAM,EAAE,WAAW;YAAEC,MAAM,EAAE;UAAM,CAAE;UAAA,WAG7CR,GAAG,CAACJ,IAAI,eACT;YACE,SAAS,EAAC,gBAAgB;YAC1B,KAAK,EAAE;cACLa,UAAU,EAAE,KAAK;cACjBC,SAAS,EAAE,GAAG;cACdC,YAAY,EAAE;YAChB,CAAE;YACF,OAAO,EAAE,MAAMd,eAAe,CAACC,KAAK,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAG/B;QAAA,GAbJA,KAAK;UAAA;UAAA;UAAA;QAAA;MAcL;QAAA;QAAA;QAAA;MAAA,QAEV;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA5EIb,QAGJ;AAAA,KAHIA,QAGJ;AA2EF,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}